[gd_scene load_steps=3 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
uniform vec4 color : hint_color;


float f(float x){
	return max(min(abs((x/2.0-round(x/2.0)+0.5)*2.0-1.0)*3.0-1.0,1.0),0.0);
}
float f1(vec2 x,float div){
	return ((sin(x.r/2560.0*div)-sin(x.g/2560.0*div))+2.0)/4.0;
	//return (x.r+x.g)/2560.0*div;
}
vec4 colfunc(float time){
	return vec4(f(-time),f(-time-1.5),f(-time-3.0),1);
}
void fragment() {
	vec2 pos=FRAGCOORD.rg;
    vec4 curr_color = texture(TEXTURE,UV); // Get current color of pixel
	vec4 col=colfunc(TIME-f1(pos,200));
    ///if (curr_color.w!=float(0)){
       // COLOR = color
    //}else{
      //  COLOR = curr_color;
    ///}
	COLOR= col;
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/color = Color( 0.45098, 0.14902, 0.14902, 1 )

[node name="Node2D" type="Node2D"]

[node name="Polygon2D" type="Polygon2D" parent="."]
material = SubResource( 2 )
position = Vector2( -128, -128 )
color = Color( 0, 0, 0, 1 )
polygon = PoolVector2Array( 0, 0, 256, 0, 256, 256, 0, 256 )

[node name="Camera2D" type="Camera2D" parent="."]
