[gd_scene load_steps=31 format=2]

[ext_resource path="res://Scripts/2dcolor.gd" type="Script" id=1]
[ext_resource path="res://Material.tres" type="Material" id=2]
[ext_resource path="res://Scripts/Outline.gd" type="Script" id=3]
[ext_resource path="res://Scripts/colorpick.gd" type="Script" id=5]
[ext_resource path="res://Scripts/VSlider.gd" type="Script" id=6]
[ext_resource path="res://Fonts/Roboto/ControlsRoboto.tres" type="DynamicFont" id=7]
[ext_resource path="res://Scripts/GodotTipsAndTricks.gd" type="Script" id=8]
[ext_resource path="res://icon.png" type="Texture" id=9]
[ext_resource path="res://Scripts/tooltest.gd" type="Script" id=10]
[ext_resource path="res://colorinfo.png" type="Texture" id=14]
[ext_resource path="res://ColorSearch.gdshader" type="Shader" id=16]

[sub_resource type="ImageTexture" id=1]
size = Vector2( 1, 1 )

[sub_resource type="ShaderMaterial" id=2]
shader = ExtResource( 16 )
shader_param/slider = null
shader_param/textsize = 74
shader_param/type = null
shader_param/colorinfo = ExtResource( 14 )

[sub_resource type="ImageTexture" id=3]
flags = 4
flags = 4
size = Vector2( 256, 256 )

[sub_resource type="Shader" id=4]
code = "shader_type canvas_item;
uniform bool online=true;
float ptf(int n,int size){//Convert int (0:n-1) to corresponding UV given total size (n)
	return (float(n)+0.5)/float(size);//works with color as well
}
int ftp(float n, int size){//inverse of ptf, also works with color
	return int(n*float(size)-0.5);
}


void fragment(){
	if (online){
	bool black=(UV.x==ptf(0,256)) ||(UV.x==ptf(255,256))||(UV.y==ptf(0,256)) ||(UV.y==ptf(255,256));
	vec4 col=texture(TEXTURE,UV);
	bool y=(texture(TEXTURE,vec2(UV.x,ptf(min(ftp(UV.y,256)+1,255),256)))!=col);
	bool x=(texture(TEXTURE,vec2(ptf(min(ftp(UV.x,256)+1,255),256),UV.y))!=col);
	black=black
	||
	(
		(x||y)&&(texture(TEXTURE,vec2(ptf(min(ftp(UV.x,256)+1,255),256),ptf(min(ftp(UV.y,256)+1,255),256)))!=col)
	)
	||
	(
		(
			(texture(TEXTURE,vec2(ptf(min(ftp(UV.x,256)+1,255),256),ptf(min(ftp(UV.y,256)+2,255),256)))!=col)
			||(texture(TEXTURE,vec2(ptf(max(ftp(UV.x,256)-1,0),256),ptf(min(ftp(UV.y,256)+2,255),256)))!=col)
		)
		&&(texture(TEXTURE,vec2(UV.x,ptf(min(ftp(UV.y,256)+2,255),256)))!=col)
		&&y
	);
//	||
//	(
//		(texture(TEXTURE,vec2(ptf(min(ftp(UV.x,256)+2,255),256),UV.y))!=col)
//		&&(texture(TEXTURE,vec2(ptf(min(ftp(UV.x,256)+2,255),256),ptf(min(ftp(UV.y,256)+1,255),256)))!=col)&&x
//	);
	COLOR=vec4(col.r*float(!black),col.g*float(!black),col.b*float(!black),1.0);
	}
}"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )
shader_param/online = true

[sub_resource type="Shader" id=6]
code = "shader_type canvas_item;
void fragment(){
	COLOR=vec4(0);
}"

[sub_resource type="ShaderMaterial" id=7]
shader = SubResource( 6 )

[sub_resource type="Shader" id=8]
code = "shader_type canvas_item;
uniform int type = 0;
uniform float r=0;
uniform float g=0;
uniform float b=0;
float ptf(int n,int size){//Convert int (0:n-1) to corresponding UV given total size (n)
	return (float(n)+0.5)/float(size);//works with color as well
}
int ftp(float n, int size){//inverse of ptf, also works with color
	return int(n*float(size)-0.5);
}
void fragment() {
	vec4 c=vec4(
	r*float(type!=2)+(1.0-UV.y)*float(type==2),
	g*float(type!=1)+(1.0-UV.y)*float(type==1),
	b*float(type!=0)+(1.0-UV.y)*float(type==0),
	1.0);
	COLOR=c;
}"

[sub_resource type="ShaderMaterial" id=9]
shader = SubResource( 8 )
shader_param/type = 0
shader_param/r = 0.0
shader_param/g = 0.0
shader_param/b = 0.0

[sub_resource type="ImageTexture" id=10]
size = Vector2( 1, 1 )

[sub_resource type="ShaderMaterial" id=11]

[sub_resource type="Shader" id=12]
code = "shader_type canvas_item;
uniform float saturation = -1;
uniform float lightness = 0;
void fragment(){
	COLOR=texture(TEXTURE,UV);
	float avrg=(COLOR.r+COLOR.g+COLOR.b)/3.0;
	COLOR.r=COLOR.r+(avrg-COLOR.r)*-min(saturation,0)+max(saturation,0)*float((COLOR.r-avrg)>0.0);
	COLOR.g=COLOR.g+(avrg-COLOR.g)*-min(saturation,0)+max(saturation,0)*float((COLOR.g-avrg)>0.0);
	COLOR.b=COLOR.b+(avrg-COLOR.b)*-min(saturation,0)+max(saturation,0)*float((COLOR.b-avrg)>0.0);
	COLOR.r=COLOR.r*(1.0+min(lightness,0))+(1.0-COLOR.r)*max(lightness,0);
	COLOR.g=COLOR.g*(1.0+min(lightness,0))+(1.0-COLOR.g)*max(lightness,0);
	COLOR.b=COLOR.b*(1.0+min(lightness,0))+(1.0-COLOR.b)*max(lightness,0);
}"

[sub_resource type="ShaderMaterial" id=13]
shader = SubResource( 12 )
shader_param/saturation = -1.0
shader_param/lightness = 0.0

[sub_resource type="Shader" id=14]
code = "shader_type canvas_item;
void fragment(){
	COLOR=vec4(UV.x,UV.y,0.0,1.0);
}"

[sub_resource type="ShaderMaterial" id=15]
shader = SubResource( 14 )

[sub_resource type="ImageTexture" id=16]
flags = 0
flags = 0
size = Vector2( 1, 1 )

[sub_resource type="Shader" id=17]
code = "shader_type canvas_item;
void fragment(){
	COLOR=vec4(UV.x,UV.y,0.0,1.0);
}"

[sub_resource type="ShaderMaterial" id=18]
shader = SubResource( 17 )

[sub_resource type="ImageTexture" id=19]
size = Vector2( 256, 256 )

[node name="Node2D" type="Node2D"]
__meta__ = {
"_edit_lock_": true
}

[node name="2dcolor" type="Polygon2D" parent="."]
material = ExtResource( 2 )
color = Color( 0, 0, 0, 1 )
texture = SubResource( 1 )
polygon = PoolVector2Array( -128, -128, 128, -128, 128, 128, -128, 128 )
uv = PoolVector2Array( 0, 0, 1, 0, 1, 1, 0, 1 )
script = ExtResource( 1 )
__meta__ = {
"_edit_lock_": true
}

[node name="ColorFindPort" type="Viewport" parent="2dcolor"]
size = Vector2( 256, 256 )
usage = 0
render_target_v_flip = true
render_target_update_mode = 3

[node name="Shader" type="Sprite" parent="2dcolor/ColorFindPort"]
material = SubResource( 2 )
position = Vector2( 128, 128 )
texture = SubResource( 3 )

[node name="Shader" type="Sprite" parent="2dcolor"]
visible = false
material = SubResource( 5 )
texture = SubResource( 3 )
flip_v = true

[node name="Colorpick" type="Polygon2D" parent="2dcolor"]
color = Color( 0.501961, 0.501961, 0.501961, 1 )
polygon = PoolVector2Array( -8, -1, -1, -1, -1, -8, 1, -8, 1, -1, 8, -1, 8, 1, 1, 1, 1, 8, -1, 8, -1, 1, -8, 1 )
script = ExtResource( 5 )

[node name="Polygon2D2" type="Polygon2D" parent="2dcolor"]
position = Vector2( 128, 0 )
z_index = -1
color = Color( 0.180392, 0.203922, 0.380392, 1 )
polygon = PoolVector2Array( -757.869, -357.354, -754.301, 352.603, 519.339, 366.873, 527.664, -359.732 )
__meta__ = {
"_edit_lock_": true
}

[node name="UI" type="Camera2D" parent="."]
current = true
zoom = Vector2( 0.5, 0.5 )
__meta__ = {
"_edit_lock_": true
}

[node name="ColorShow" type="Polygon2D" parent="UI"]
position = Vector2( -3.46509, 155.086 )
scale = Vector2( 0.5, 0.5 )
color = Color( 0.501961, 0.501961, 0.501961, 1 )
polygon = PoolVector2Array( -8, 0, -64, 0, -64, 32, -8, 32 )

[node name="ColorLabel" type="RichTextLabel" parent="UI"]
margin_left = 10.5014
margin_top = 83.5546
margin_right = 230.501
margin_bottom = 166.555
rect_scale = Vector2( 0.5, 0.5 )
custom_fonts/normal_font = ExtResource( 7 )
text = "Current color:
(128,128,128)"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ClosestColorLabel" type="RichTextLabel" parent="UI"]
margin_left = 29.8936
margin_top = 149.5
margin_right = 987.894
margin_bottom = 187.5
rect_scale = Vector2( 0.5, 0.5 )
custom_fonts/normal_font = ExtResource( 7 )
text = "Closest color: #808080 Gray"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VSlider" type="VSlider" parent="UI"]
material = SubResource( 7 )
margin_left = 256.0
margin_top = -128.0
margin_right = 272.0
margin_bottom = 128.0
rect_scale = Vector2( 2, 1 )
max_value = 255.0
value = 128.0
tick_count = 16
script = ExtResource( 6 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Shader" type="Polygon2D" parent="UI/VSlider"]
material = SubResource( 9 )
texture = SubResource( 10 )
polygon = PoolVector2Array( 0, 0, 16, 0, 16, 256, 0, 256 )
uv = PoolVector2Array( 0, 0, 1, 0, 1, 1, 0, 1 )
__meta__ = {
"_edit_lock_": true
}

[node name="picksmol" type="Polygon2D" parent="UI/VSlider"]
position = Vector2( 8, 128 )
color = Color( 0.501961, 0.501961, 0.501961, 1 )
polygon = PoolVector2Array( -8, -6, -6.5, -6, -6.5, -1, 6.5, -1, 6.5, -6, 8, -6, 8, -1, 9, 0, 8, 1, 8, 6, 6.5, 6, 6.5, 1, -6.5, 1, -6.5, 6, -8, 6, -8, 1, -9, 0, -8, -1.4375 )
script = ExtResource( 3 )
__meta__ = {
"_edit_lock_": true
}
Width = 0.0

[node name="TypeButton" type="Button" parent="UI"]
material = SubResource( 11 )
margin_left = 98.4103
margin_top = 0.730774
margin_right = 188.41
margin_bottom = 46.7308
text = "Change type"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VisibleButton" type="Button" parent="UI"]
margin_left = 48.1905
margin_top = -90.825
margin_right = 123.191
margin_bottom = -57.825
disabled = true
text = "Hide"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Bs" type="Node2D" parent="."]

[node name="testlol" type="Polygon2D" parent="Bs"]
position = Vector2( -1.19055, -5.95274 )
scale = Vector2( 5, 5 )
polygon = PoolVector2Array( 37.4711, -24.1838, 42.0745, -23.6282, 46.7363, -25.8362, 50.3079, -17.9786, 47.5511, -11.7227, 36.2011, -9.73848, 33.4232, -10.5322, 42.5507, -10.4528 )
script = ExtResource( 8 )

[node name="Sprite" type="Sprite" parent="Bs"]
material = SubResource( 13 )
position = Vector2( 982.1, -17.2554 )
texture = ExtResource( 9 )

[node name="tooltest" type="Polygon2D" parent="Bs/Sprite"]
position = Vector2( -924.465, -200.005 )
color = Color( 0.896641, 0, 0.442758, 1 )
polygon = PoolVector2Array( 138, 113.5, 132.5, 112.5, 133, 112.5, 133.5, 112, 133.5, 111.5, 134.5, 111.5, 134.5, 111.5, 135.5, 111.5, 135.5, 112, 136, 112.5, 136.5, 112.5, 136.5, 112.5, 138.5, 112.5, 138.5, 113, 139, 113.5, 139.5, 113.5, 139.5, 113.5, 140.5, 113.5, 140.5, 114, 141, 114.5, 141.5, 114.5, 141.5, 114.5, 142.5, 114.5, 142.5, 115, 143, 115.5, 143.5, 115.5, 144, 116.5, 144.5, 116.5, 144.5, 117.5, 144.5, 119, 145, 119.5, 145.5, 119.5, 145.5, 120.5, 145.5, 128.5, 144.5, 128.5, 144.5, 128, 144, 127.5, 143.5, 127.5, 143.5, 127.5, 142.5, 127.5, 142.5, 127, 142, 126.5, 141.5, 126.5, 141.5, 126.5, 140.5, 126.5, 140.5, 126, 140, 125.5, 139.5, 125.5, 139.5, 125.5, 138.5, 125.5, 138.5, 125, 138, 124.5, 137.5, 124.5, 137.5, 124.5, 136.5, 124.5, 136.5, 124, 136, 123.5, 135.5, 123.5, 135.5, 123.5, 134.5, 123.5, 134.5, 123, 134, 122.5, 133.5, 122.5, 133.5, 122.5, 132.5, 122.5, 132.5, 121, 132, 120.5, 131.5, 120.5, 131.5, 119.5, 131.5, 115.5, 132, 115.5 )
script = ExtResource( 10 )
hmm = [ Vector2( 138, 113.5 ), Vector2( 132.5, 112.5 ), Vector2( 133, 112.5 ), Vector2( 133.5, 112 ), Vector2( 133.5, 111.5 ), Vector2( 134.5, 111.5 ), Vector2( 134.5, 111.5 ), Vector2( 135.5, 111.5 ), Vector2( 135.5, 112 ), Vector2( 136, 112.5 ), Vector2( 136.5, 112.5 ), Vector2( 136.5, 112.5 ), Vector2( 138.5, 112.5 ), Vector2( 138.5, 113 ), Vector2( 139, 113.5 ), Vector2( 139.5, 113.5 ), Vector2( 139.5, 113.5 ), Vector2( 140.5, 113.5 ), Vector2( 140.5, 114 ), Vector2( 141, 114.5 ), Vector2( 141.5, 114.5 ), Vector2( 141.5, 114.5 ), Vector2( 142.5, 114.5 ), Vector2( 142.5, 115 ), Vector2( 143, 115.5 ), Vector2( 143.5, 115.5 ), Vector2( 144, 116.5 ), Vector2( 144.5, 116.5 ), Vector2( 144.5, 117.5 ), Vector2( 144.5, 119 ), Vector2( 145, 119.5 ), Vector2( 145.5, 119.5 ), Vector2( 145.5, 120.5 ), Vector2( 145.5, 128.5 ), Vector2( 144.5, 128.5 ), Vector2( 144.5, 128 ), Vector2( 144, 127.5 ), Vector2( 143.5, 127.5 ), Vector2( 143.5, 127.5 ), Vector2( 142.5, 127.5 ), Vector2( 142.5, 127 ), Vector2( 142, 126.5 ), Vector2( 141.5, 126.5 ), Vector2( 141.5, 126.5 ), Vector2( 140.5, 126.5 ), Vector2( 140.5, 126 ), Vector2( 140, 125.5 ), Vector2( 139.5, 125.5 ), Vector2( 139.5, 125.5 ), Vector2( 138.5, 125.5 ), Vector2( 138.5, 125 ), Vector2( 138, 124.5 ), Vector2( 137.5, 124.5 ), Vector2( 137.5, 124.5 ), Vector2( 136.5, 124.5 ), Vector2( 136.5, 124 ), Vector2( 136, 123.5 ), Vector2( 135.5, 123.5 ), Vector2( 135.5, 123.5 ), Vector2( 134.5, 123.5 ), Vector2( 134.5, 123 ), Vector2( 134, 122.5 ), Vector2( 133.5, 122.5 ), Vector2( 133.5, 122.5 ), Vector2( 132.5, 122.5 ), Vector2( 132.5, 121 ), Vector2( 132, 120.5 ), Vector2( 131.5, 120.5 ), Vector2( 131.5, 119.5 ), Vector2( 131.5, 115.5 ), Vector2( 132, 115.5 ) ]

[node name="Polygon2D" type="Polygon2D" parent="Bs"]
material = SubResource( 15 )
position = Vector2( 884.014, 265.106 )
texture = SubResource( 16 )
polygon = PoolVector2Array( 0, 0, 100, 0, 100, 100, 0, 100 )
uv = PoolVector2Array( 0, 0, 1, 0, 1, 1, 0, 1 )

[node name="Sprite" type="Sprite" parent="Bs/Polygon2D"]
material = SubResource( 18 )
position = Vector2( 266.765, 121.895 )
texture = SubResource( 19 )

[connection signal="value_changed" from="UI/VSlider" to="2dcolor" method="SliderChanged"]
[connection signal="value_changed" from="UI/VSlider" to="UI/VSlider/picksmol" method="SliderChanged"]
[connection signal="pressed" from="UI/TypeButton" to="2dcolor" method="_TypeButton"]
