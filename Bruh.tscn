[gd_scene load_steps=36 format=2]

[ext_resource path="res://Scripts/Axis View.gd" type="Script" id=1]
[ext_resource path="res://Material.tres" type="Material" id=2]
[ext_resource path="res://Scripts/Outline.gd" type="Script" id=3]
[ext_resource path="res://Scripts/UI.gd" type="Script" id=4]
[ext_resource path="res://Scripts/colorpick.gd" type="Script" id=5]
[ext_resource path="res://Scripts/VSlider.gd" type="Script" id=6]
[ext_resource path="res://Scripts/OptionButton.gd" type="Script" id=7]
[ext_resource path="res://Scripts/GodotTipsAndTricks.gd" type="Script" id=8]
[ext_resource path="res://icon.png" type="Texture" id=9]
[ext_resource path="res://Scripts/tooltest.gd" type="Script" id=10]
[ext_resource path="res://UITheme.tres" type="Theme" id=11]
[ext_resource path="res://Scripts/Cam.gd" type="Script" id=12]
[ext_resource path="res://Scripts/RichTextLabelMetaInfo.gd" type="Script" id=13]
[ext_resource path="res://Outline.shader" type="Shader" id=14]
[ext_resource path="res://Scripts/Panels.gd" type="Script" id=15]
[ext_resource path="res://ColorSearch.shader" type="Shader" id=16]
[ext_resource path="res://colorinfo.png" type="Texture" id=17]
[ext_resource path="res://Scripts/Cube View.gd" type="Script" id=18]
[ext_resource path="res://Scripts/Spatial.gd" type="Script" id=19]
[ext_resource path="res://Scripts/BloomSlider.gd" type="Script" id=20]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;
void fragment(){
	COLOR=vec4(0);
}
"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )

[sub_resource type="Shader" id=3]
code = "shader_type canvas_item;
uniform int type = 0;
uniform int r=0;
uniform int g=0;
uniform int b=0;
float ptf(int n,int size){//Convert int (0:n-1) to corresponding UV given total size (n)
	return (float(n)+0.5)/float(size);//works with color as well
}
int ftp(float n, int size){//inverse of ptf, also works with color
	return int(n*float(size)-0.5);
}
void fragment() {
	vec4 c=vec4(
	ptf(r,256)*float(type!=2)+(1.0-UV.y)*float(type==2),
	ptf(g,256)*float(type!=1)+(1.0-UV.y)*float(type==1),
	ptf(b,256)*float(type!=0)+(1.0-UV.y)*float(type==0),
	1.0);
//	if (UV.x>0.995 || UV.x<0.005){
//		c=vec4(1);
//	}
	COLOR=c;
}"

[sub_resource type="ShaderMaterial" id=4]
shader = SubResource( 3 )
shader_param/type = 0
shader_param/r = 0
shader_param/g = 0
shader_param/b = 0

[sub_resource type="ImageTexture" id=5]
size = Vector2( 1, 1 )

[sub_resource type="ShaderMaterial" id=6]
shader = ExtResource( 16 )
shader_param/slider = 128
shader_param/textsize = 74
shader_param/type = 0
shader_param/colorinfo = ExtResource( 17 )

[sub_resource type="ImageTexture" id=7]
flags = 0
flags = 0
size = Vector2( 256, 256 )

[sub_resource type="ImageTexture" id=8]
size = Vector2( 1, 1 )

[sub_resource type="ShaderMaterial" id=9]
shader = ExtResource( 14 )
shader_param/online = false
shader_param/fill_in = false

[sub_resource type="ImageTexture" id=10]
flags = 0
flags = 0
size = Vector2( 512, 512 )

[sub_resource type="SpatialMaterial" id=11]
flags_unshaded = true
vertex_color_use_as_albedo = true

[sub_resource type="Environment" id=12]
background_mode = 1
background_energy = 0.0
glow_intensity = 1.0
glow_bloom = 0.5
glow_blend_mode = 1

[sub_resource type="SpatialMaterial" id=13]
flags_unshaded = true
albedo_color = Color( 0.0392157, 0.827451, 0.160784, 1 )

[sub_resource type="Shader" id=14]
code = "shader_type canvas_item;
uniform float saturation = -1;
uniform float lightness = 0;
void fragment(){
	COLOR=texture(TEXTURE,UV);
	float avrg=(COLOR.r+COLOR.g+COLOR.b)/3.0;
	COLOR.r=COLOR.r+(avrg-COLOR.r)*-min(saturation,0)+max(saturation,0)*float((COLOR.r-avrg)>0.0);
	COLOR.g=COLOR.g+(avrg-COLOR.g)*-min(saturation,0)+max(saturation,0)*float((COLOR.g-avrg)>0.0);
	COLOR.b=COLOR.b+(avrg-COLOR.b)*-min(saturation,0)+max(saturation,0)*float((COLOR.b-avrg)>0.0);
	COLOR.r=COLOR.r*(1.0+min(lightness,0))+(1.0-COLOR.r)*max(lightness,0);
	COLOR.g=COLOR.g*(1.0+min(lightness,0))+(1.0-COLOR.g)*max(lightness,0);
	COLOR.b=COLOR.b*(1.0+min(lightness,0))+(1.0-COLOR.b)*max(lightness,0);
}"

[sub_resource type="ShaderMaterial" id=15]
shader = SubResource( 14 )
shader_param/saturation = -1.0
shader_param/lightness = 0.0

[node name="Node2D" type="Node2D"]
__meta__ = {
"_edit_lock_": true
}

[node name="UI" type="CanvasLayer" parent="."]
script = ExtResource( 4 )

[node name="MinimumSize" type="Control" parent="UI"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_right = -0.00012207
margin_bottom = -6.10352e-05
rect_min_size = Vector2( 425, 240 )
theme = ExtResource( 11 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Panels" type="Control" parent="UI/MinimumSize"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
script = ExtResource( 15 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Panel" type="Panel" parent="UI/MinimumSize/Panels"]
anchor_right = 0.025
anchor_bottom = 1.0
theme = ExtResource( 11 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Panel2" type="Panel" parent="UI/MinimumSize/Panels"]
anchor_right = 1.0
anchor_bottom = 0.044
theme = ExtResource( 11 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Panel3" type="Panel" parent="UI/MinimumSize/Panels"]
anchor_left = 0.7
anchor_right = 1.0
anchor_bottom = 1.0
theme = ExtResource( 11 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Panel4" type="Panel" parent="UI/MinimumSize/Panels"]
anchor_top = 0.85
anchor_right = 1.0
anchor_bottom = 1.0
theme = ExtResource( 11 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Interact" type="ReferenceRect" parent="UI/MinimumSize"]
anchor_left = 0.025
anchor_top = 0.044
anchor_right = 0.7
anchor_bottom = 0.85
focus_mode = 2
border_color = Color( 0.027451, 0.0235294, 0.392157, 1 )
border_width = 4.0
editor_only = false
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="AxisView" type="Control" parent="UI/MinimumSize"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="VSlider" type="VSlider" parent="UI/MinimumSize/AxisView"]
material = SubResource( 2 )
anchor_left = 0.715
anchor_top = 0.054
anchor_right = 0.748
anchor_bottom = 0.405
hint_tooltip = "Control Axis Slider"
max_value = 255.0
value = 128.0
tick_count = 16
script = ExtResource( 6 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Shader" type="Polygon2D" parent="UI/MinimumSize/AxisView/VSlider"]
material = SubResource( 4 )
position = Vector2( 0, 8 )
scale = Vector2( 3, 1 )
color = Color( 0.219608, 0, 1, 1 )
texture = SubResource( 5 )
polygon = PoolVector2Array( 0, 0, 16, 0, 16, 256, 0, 256 )
uv = PoolVector2Array( 0, 0, 1, 0, 1, 1, 0, 1 )
script = ExtResource( 3 )
__meta__ = {
"_edit_lock_": true
}
Width = 0.0

[node name="picksmol" type="Polygon2D" parent="UI/MinimumSize/AxisView/VSlider"]
position = Vector2( 24, 128 )
color = Color( 0.501961, 0.501961, 0.501961, 1 )
polygon = PoolVector2Array( -24, -2, 24, -2, 24, 2, -24, 2 )
script = ExtResource( 3 )
__meta__ = {
"_edit_lock_": true
}
Width = 1.0

[node name="IsFocused" type="ReferenceRect" parent="UI/MinimumSize/AxisView/VSlider"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = 8.0
margin_bottom = -8.0
mouse_filter = 2
input_pass_on_modal_close_click = false
border_color = Color( 0, 0.670588, 1, 1 )
border_width = 2.0
editor_only = false
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="GridContainer" type="GridContainer" parent="UI/MinimumSize/AxisView"]
anchor_left = 0.759673
anchor_top = 0.0634921
anchor_right = 0.985863
anchor_bottom = 0.27381
hint_tooltip = "Toggles"
columns = 2
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="Type" type="Button" parent="UI/MinimumSize/AxisView/GridContainer"]
margin_right = 149.0
margin_bottom = 24.0
hint_tooltip = "Control Axis"
size_flags_horizontal = 3
theme = ExtResource( 11 )
text = "B"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ClosestColor" type="Button" parent="UI/MinimumSize/AxisView/GridContainer"]
margin_left = 153.0
margin_right = 302.0
margin_bottom = 24.0
hint_tooltip = "Closest Color Toggle"
size_flags_horizontal = 3
theme = ExtResource( 11 )
toggle_mode = true
text = "CC: Off"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Outline" type="Button" parent="UI/MinimumSize/AxisView/GridContainer"]
margin_top = 28.0
margin_right = 149.0
margin_bottom = 52.0
hint_tooltip = "Color Outline Toggle"
size_flags_horizontal = 3
theme = ExtResource( 11 )
toggle_mode = true
text = "OL: Off"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CubeView" type="Control" parent="UI/MinimumSize"]
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="CubeModeButton" type="Button" parent="UI/MinimumSize/CubeView"]
anchor_left = 0.729278
anchor_top = 0.066084
anchor_right = 0.846632
anchor_bottom = 0.151993
margin_top = 0.230003
margin_right = 0.276489
margin_bottom = 0.282967
rect_min_size = Vector2( 100, 25 )
text = "Orbit Mode"
__meta__ = {
"_edit_use_anchors_": true
}

[node name="Bloom" type="Button" parent="UI/MinimumSize/CubeView"]
anchor_left = 0.729167
anchor_top = 0.162698
anchor_right = 0.846726
anchor_bottom = 0.231482
toggle_mode = true
text = "Bloom:Off"
__meta__ = {
"_edit_use_anchors_": true
}

[node name="BloomSlider" type="VSlider" parent="UI/MinimumSize/CubeView"]
anchor_left = 0.731245
anchor_top = 0.240741
anchor_right = 0.787793
anchor_bottom = 0.59127
hint_tooltip = "Control Axis Slider"
max_value = 200.0
value = 50.0
editable = false
tick_count = 11
script = ExtResource( 20 )
__meta__ = {
"_edit_use_anchors_": true
}

[node name="IsFocused" type="ReferenceRect" parent="UI/MinimumSize/CubeView/BloomSlider"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
mouse_filter = 2
input_pass_on_modal_close_click = false
border_color = Color( 0, 0.670588, 1, 1 )
border_width = 2.0
editor_only = false
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="OptionButton" type="OptionButton" parent="UI/MinimumSize"]
anchor_left = 0.014
anchor_top = 0.868
anchor_right = 0.265
anchor_bottom = 0.989
margin_left = 0.0702934
margin_top = -0.162537
margin_right = -0.273712
margin_bottom = 0.36145
hint_tooltip = "Select Type"
script = ExtResource( 7 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="ColorShow" type="ColorRect" parent="UI/MinimumSize"]
anchor_left = 0.283
anchor_top = 0.869
anchor_right = 0.331
anchor_bottom = 0.98
margin_left = 3.05176e-05
margin_right = 3.05176e-05
color = Color( 0.501961, 0.501961, 0.501961, 1 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": false
}

[node name="ScrollContainer" type="ScrollContainer" parent="UI/MinimumSize"]
visible = false
anchor_left = 0.728
anchor_top = 0.556
anchor_right = 0.964
anchor_bottom = 0.872
margin_left = 0.249695
scroll_horizontal_enabled = false
__meta__ = {
"_edit_use_anchors_": false
}

[node name="VBoxContainer" type="VBoxContainer" parent="UI/MinimumSize/ScrollContainer"]
margin_right = 100.0
margin_bottom = 204.0

[node name="CheckBox" type="Button" parent="UI/MinimumSize/ScrollContainer/VBoxContainer"]
margin_right = 100.0
margin_bottom = 100.0
rect_min_size = Vector2( 100, 100 )
text = "bruh"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="CheckBox2" type="Button" parent="UI/MinimumSize/ScrollContainer/VBoxContainer"]
margin_top = 104.0
margin_right = 100.0
margin_bottom = 204.0
rect_min_size = Vector2( 100, 100 )
text = "bruh"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Button2" type="Button" parent="UI/MinimumSize"]
visible = false
anchor_left = 0.741
anchor_top = 0.541
anchor_right = 0.956
anchor_bottom = 0.867
margin_left = -0.551025
margin_top = 0.256531
margin_right = 0.489136
margin_bottom = -0.199524
rect_min_size = Vector2( 100, 50 )
hint_tooltip = "TEST
"
text = "Bruh"
__meta__ = {
"_edit_use_anchors_": false
}

[node name="LabelCont" type="HSplitContainer" parent="UI/MinimumSize"]
anchor_left = 0.350024
anchor_top = 0.859741
anchor_right = 0.989
anchor_bottom = 0.987936
split_offset = 100
__meta__ = {
"_edit_use_anchors_": false
}

[node name="ClosestColorLabel" type="RichTextLabel" parent="UI/MinimumSize/LabelCont"]
margin_right = 350.0
margin_bottom = 96.9155
rect_min_size = Vector2( 250, 50 )
hint_tooltip = "Copy"
bbcode_enabled = true
bbcode_text = "Closest color:
[url=0]#808080[/url] [url=1]Gray[/url]"
text = "Closest color:
#808080 Gray"
script = ExtResource( 13 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": true
}
info = [ "#808080", "Gray" ]

[node name="ColorLabel" type="RichTextLabel" parent="UI/MinimumSize/LabelCont"]
margin_left = 362.0
margin_right = 702.874
margin_bottom = 96.9155
grow_horizontal = 0
grow_vertical = 0
rect_min_size = Vector2( 150, 40 )
hint_tooltip = "Copy"
bbcode_enabled = true
bbcode_text = "Current color:
RGB=[url=0](128,128,128)[/url] [url=1]#808080[/url]"
text = "Current color:
RGB=(128,128,128) #808080"
script = ExtResource( 13 )
__meta__ = {
"_edit_lock_": true,
"_edit_use_anchors_": true
}
info = [ "128,128,128", "#808080" ]

[node name="TooSmall" type="ColorRect" parent="UI"]
visible = false
anchor_right = 1.0
anchor_bottom = 1.0
color = Color( 0.0509804, 0.0627451, 0.156863, 1 )
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Label" type="Label" parent="UI/TooSmall"]
anchor_right = 1.0
anchor_bottom = 1.0
text = "Too Small"
align = 1
valign = 1
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Axis View" type="Node2D" parent="."]
script = ExtResource( 1 )

[node name="ColorFindPort" type="Viewport" parent="Axis View"]
size = Vector2( 256, 256 )
handle_input_locally = false
usage = 0
render_target_v_flip = true
render_target_update_mode = 3

[node name="Shader" type="Sprite" parent="Axis View/ColorFindPort"]
material = SubResource( 6 )
position = Vector2( 128, 128 )
texture = SubResource( 7 )

[node name="Background" type="Polygon2D" parent="Axis View"]
position = Vector2( 128, 0 )
z_index = -1
color = Color( 0.180392, 0.203922, 0.380392, 1 )
polygon = PoolVector2Array( -795.858, -374.777, -800.353, 371.38, 542.13, 377.373, 537.635, -371.78 )
__meta__ = {
"_edit_lock_": true
}

[node name="Plane" type="Polygon2D" parent="Axis View"]
material = ExtResource( 2 )
color = Color( 0, 0, 0, 1 )
texture = SubResource( 8 )
polygon = PoolVector2Array( -128, -128, 128, -128, 128, 128, -128, 128 )
uv = PoolVector2Array( 0, 0, 1, 0, 1, 1, 0, 1 )
__meta__ = {
"_edit_lock_": true
}

[node name="Shader" type="Sprite" parent="Axis View"]
material = SubResource( 9 )
scale = Vector2( 0.5, 0.5 )
texture = SubResource( 10 )
flip_v = true
__meta__ = {
"_edit_lock_": true
}

[node name="Colorpick" type="Polygon2D" parent="Axis View"]
scale = Vector2( 0.5, 0.5 )
color = Color( 0.501961, 0.501961, 0.501961, 1 )
polygon = PoolVector2Array( -16, -2, -2, -2, -2, -16, 2, -16, 2, -2, 16, -2, 16, 2, 2, 2, 2, 16, -2, 16, -2, 2, -16, 2 )
script = ExtResource( 5 )
Width = 1.5

[node name="Cube View" type="Node2D" parent="."]
visible = false
script = ExtResource( 18 )

[node name="ViewportContainer" type="ViewportContainer" parent="Cube View"]
margin_left = -672.0
margin_top = -378.0
margin_right = 672.0
margin_bottom = 378.0
mouse_filter = 2
__meta__ = {
"_edit_use_anchors_": false
}

[node name="Viewport" type="Viewport" parent="Cube View/ViewportContainer"]
size = Vector2( 1344, 756 )
handle_input_locally = false
render_target_update_mode = 0

[node name="MultiMesh" type="MultiMeshInstance" parent="Cube View/ViewportContainer/Viewport"]
material_override = SubResource( 11 )
generate_lightmap = false
script = ExtResource( 19 )

[node name="Camera" type="Camera" parent="Cube View/ViewportContainer/Viewport"]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0.001, -0.027, 400.002 )
environment = SubResource( 12 )
size = 0.1
far = 100000.0

[node name="Test" type="CSGPolygon" parent="Cube View/ViewportContainer/Viewport"]
polygon = PoolVector2Array( 0, 0, 0, 1, 4.09692, 1.67095, 1, 0 )
material = SubResource( 13 )

[node name="YSort" type="YSort" parent="Cube View"]
visible = false

[node name="Polygon2D" type="Polygon2D" parent="Cube View"]
visible = false
z_index = -1
color = Color( 0.211765, 0.211765, 0.211765, 1 )
polygon = PoolVector2Array( -535.394, -278.644, -559.934, 399.057, 757.714, 361.302, 738.837, -382.47, -599.577, -359.818 )
__meta__ = {
"_edit_lock_": true
}

[node name="Cam" type="Camera2D" parent="."]
current = true
zoom = Vector2( 0.5, 0.5 )
script = ExtResource( 12 )
__meta__ = {
"_edit_lock_": true
}

[node name="Bs" type="Node2D" parent="."]

[node name="testlol" type="Polygon2D" parent="Bs"]
position = Vector2( -1.19055, -5.95274 )
scale = Vector2( 5, 5 )
polygon = PoolVector2Array( 37.4711, -24.1838, 42.0745, -23.6282, 46.7363, -25.8362, 50.3079, -17.9786, 47.5511, -11.7227, 36.2011, -9.73848, 33.4232, -10.5322, 42.5507, -10.4528 )
script = ExtResource( 8 )

[node name="Sprite" type="Sprite" parent="Bs"]
material = SubResource( 15 )
position = Vector2( 1047.69, -424.249 )
texture = ExtResource( 9 )

[node name="tooltest" type="Polygon2D" parent="Bs/Sprite"]
position = Vector2( 87.2548, 48.9003 )
scale = Vector2( 0.519479, 1 )
color = Color( 0.122216, 0.992504, 0, 1 )
polygon = PoolVector2Array( 138, 113.5, 132.5, 112.5, 133, 112.5, 133.5, 112, 133.5, 111.5, 134.5, 111.5, 134.5, 111.5, 135.5, 111.5, 135.5, 112, 136, 112.5, 136.5, 112.5, 136.5, 112.5, 138.5, 112.5, 138.5, 113, 139, 113.5, 139.5, 113.5, 139.5, 113.5, 140.5, 113.5, 140.5, 114, 141, 114.5, 141.5, 114.5, 141.5, 114.5, 142.5, 114.5, 142.5, 115, 143, 115.5, 143.5, 115.5, 144, 116.5, 144.5, 116.5, 144.5, 117.5, 144.5, 119, 145, 119.5, 145.5, 119.5, 145.5, 120.5, 145.5, 128.5, 144.5, 128.5, 144.5, 128, 144, 127.5, 143.5, 127.5, 143.5, 127.5, 142.5, 127.5, 142.5, 127, 142, 126.5, 141.5, 126.5, 141.5, 126.5, 140.5, 126.5, 140.5, 126, 140, 125.5, 139.5, 125.5, 139.5, 125.5, 138.5, 125.5, 138.5, 125, 138, 124.5, 137.5, 124.5, 137.5, 124.5, 136.5, 124.5, 136.5, 124, 136, 123.5, 135.5, 123.5, 135.5, 123.5, 134.5, 123.5, 134.5, 123, 134, 122.5, 133.5, 122.5, 133.5, 122.5, 132.5, 122.5, 132.5, 121, 132, 120.5, 131.5, 120.5, 131.5, 119.5, 131.5, 115.5, 132, 115.5 )
script = ExtResource( 10 )
hmm = [ Vector2( 138, 113.5 ), Vector2( 132.5, 112.5 ), Vector2( 133, 112.5 ), Vector2( 133.5, 112 ), Vector2( 133.5, 111.5 ), Vector2( 134.5, 111.5 ), Vector2( 134.5, 111.5 ), Vector2( 135.5, 111.5 ), Vector2( 135.5, 112 ), Vector2( 136, 112.5 ), Vector2( 136.5, 112.5 ), Vector2( 136.5, 112.5 ), Vector2( 138.5, 112.5 ), Vector2( 138.5, 113 ), Vector2( 139, 113.5 ), Vector2( 139.5, 113.5 ), Vector2( 139.5, 113.5 ), Vector2( 140.5, 113.5 ), Vector2( 140.5, 114 ), Vector2( 141, 114.5 ), Vector2( 141.5, 114.5 ), Vector2( 141.5, 114.5 ), Vector2( 142.5, 114.5 ), Vector2( 142.5, 115 ), Vector2( 143, 115.5 ), Vector2( 143.5, 115.5 ), Vector2( 144, 116.5 ), Vector2( 144.5, 116.5 ), Vector2( 144.5, 117.5 ), Vector2( 144.5, 119 ), Vector2( 145, 119.5 ), Vector2( 145.5, 119.5 ), Vector2( 145.5, 120.5 ), Vector2( 145.5, 128.5 ), Vector2( 144.5, 128.5 ), Vector2( 144.5, 128 ), Vector2( 144, 127.5 ), Vector2( 143.5, 127.5 ), Vector2( 143.5, 127.5 ), Vector2( 142.5, 127.5 ), Vector2( 142.5, 127 ), Vector2( 142, 126.5 ), Vector2( 141.5, 126.5 ), Vector2( 141.5, 126.5 ), Vector2( 140.5, 126.5 ), Vector2( 140.5, 126 ), Vector2( 140, 125.5 ), Vector2( 139.5, 125.5 ), Vector2( 139.5, 125.5 ), Vector2( 138.5, 125.5 ), Vector2( 138.5, 125 ), Vector2( 138, 124.5 ), Vector2( 137.5, 124.5 ), Vector2( 137.5, 124.5 ), Vector2( 136.5, 124.5 ), Vector2( 136.5, 124 ), Vector2( 136, 123.5 ), Vector2( 135.5, 123.5 ), Vector2( 135.5, 123.5 ), Vector2( 134.5, 123.5 ), Vector2( 134.5, 123 ), Vector2( 134, 122.5 ), Vector2( 133.5, 122.5 ), Vector2( 133.5, 122.5 ), Vector2( 132.5, 122.5 ), Vector2( 132.5, 121 ), Vector2( 132, 120.5 ), Vector2( 131.5, 120.5 ), Vector2( 131.5, 119.5 ), Vector2( 131.5, 115.5 ), Vector2( 132, 115.5 ) ]

[node name="BAd" type="Polygon2D" parent="Bs"]
polygon = PoolVector2Array( 759.535, -419.046, 819.285, -420.106, 845.802, -485.867, 880.804, -374.144, 843.68, -463.947, 825.649, -398.893 )

[node name="TodoLabel" type="Label" parent="."]
margin_left = -252.53
margin_top = -158.264
margin_right = -77.5297
margin_bottom = -144.264
text = "ADD ZOOM TO CUBE"
__meta__ = {
"_edit_use_anchors_": false
}

[connection signal="resized" from="UI/MinimumSize" to="UI" method="_resized"]
[connection signal="focus_entered" from="UI/MinimumSize/Interact" to="UI" method="_on_Interact_focus_entered"]
[connection signal="focus_exited" from="UI/MinimumSize/Interact" to="UI" method="_on_Interact_focus_exited"]
[connection signal="gui_input" from="UI/MinimumSize/Interact" to="UI" method="_on_Interact_gui_input"]
[connection signal="focus_entered" from="UI/MinimumSize/AxisView/VSlider" to="UI/MinimumSize/AxisView/VSlider" method="_on_VSlider_focus_entered"]
[connection signal="focus_exited" from="UI/MinimumSize/AxisView/VSlider" to="UI/MinimumSize/AxisView/VSlider" method="_on_VSlider_focus_exited"]
[connection signal="resized" from="UI/MinimumSize/AxisView/VSlider" to="UI/MinimumSize/AxisView/VSlider" method="_resized"]
[connection signal="value_changed" from="UI/MinimumSize/AxisView/VSlider" to="UI" method="_on_VSlider_value_changed"]
[connection signal="value_changed" from="UI/MinimumSize/AxisView/VSlider" to="UI/MinimumSize/AxisView/VSlider" method="_value_changed"]
[connection signal="pressed" from="UI/MinimumSize/AxisView/GridContainer/Type" to="UI" method="_on_Type_pressed"]
[connection signal="toggled" from="UI/MinimumSize/AxisView/GridContainer/ClosestColor" to="UI" method="_on_ClosestColor_toggled"]
[connection signal="toggled" from="UI/MinimumSize/AxisView/GridContainer/Outline" to="UI" method="_on_Outline_toggled"]
[connection signal="pressed" from="UI/MinimumSize/CubeView/CubeModeButton" to="UI" method="_on_CubeModeButton_pressed"]
[connection signal="toggled" from="UI/MinimumSize/CubeView/Bloom" to="UI" method="_on_Bloom_toggled"]
[connection signal="focus_entered" from="UI/MinimumSize/CubeView/BloomSlider" to="UI/MinimumSize/CubeView/BloomSlider" method="_on_BloomSlider_focus_entered"]
[connection signal="focus_exited" from="UI/MinimumSize/CubeView/BloomSlider" to="UI/MinimumSize/CubeView/BloomSlider" method="_on_BloomSlider_focus_exited"]
[connection signal="gui_input" from="UI/MinimumSize/CubeView/BloomSlider" to="UI/MinimumSize/CubeView/BloomSlider" method="_on_BloomSlider_gui_input"]
[connection signal="value_changed" from="UI/MinimumSize/CubeView/BloomSlider" to="UI" method="_on_BloomSlider_value_changed"]
[connection signal="item_selected" from="UI/MinimumSize/OptionButton" to="UI" method="_on_OptionButton_item_selected"]
[connection signal="meta_clicked" from="UI/MinimumSize/LabelCont/ClosestColorLabel" to="UI" method="_on_ClosestColorLabel_meta_clicked"]
[connection signal="meta_clicked" from="UI/MinimumSize/LabelCont/ColorLabel" to="UI" method="_on_ColorLabel_meta_clicked"]
